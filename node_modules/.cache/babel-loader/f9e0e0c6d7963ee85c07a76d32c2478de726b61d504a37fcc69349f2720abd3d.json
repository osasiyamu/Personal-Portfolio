{"ast":null,"code":"var _jsxFileName = \"/Users/cn/Documents/School/SYSC 4907 A/GitHub/personalportfolio/src/pages/portfolio/ProfileImgContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// import { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileImgContainer = () => {\n  _s();\n  var profileId = 1;\n  const [userDesc, setUserDesc] = useState([]);\n  const getUserDescription = () => {\n    fetch(`http://localhost:5555/myportfolio/${profileId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setUserDesc(data);\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n    });\n  };\n  useEffect(() => {\n    getUserDescription();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"profileImgContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://avatars.githubusercontent.com/u/1\",\n      id: \"profileImg\",\n      alt: \"Profile Image\",\n      className: \"rounded-circle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"userBio\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"username\",\n        children: userDesc[\"firstname\"] + \" \" + userDesc[\"lastname\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"userOccupation\",\n        children: profileId + \" \" + userDesc[\"occupation\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this)\n\n  // <div>\n  // \t<h1>Data from PostgreSQL Database for Profile: {profileId}</h1>\n\n  // \t{/* <ul>\n  // \t\t{userDesc.map(item => (\n  // \t\t\t<li key={item.id}>{item.value}</li>\n  // \t\t))}\n  // \t</ul> */}\n\n  // \t<Button onClick={test()}>Click Me</Button>\n  // </div>\n  ;\n};\n_s(ProfileImgContainer, \"y+01yACsztW/sZEQ7RVOqsP1cP4=\");\n_c = ProfileImgContainer;\nexport default ProfileImgContainer;\nvar _c;\n$RefreshReg$(_c, \"ProfileImgContainer\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ProfileImgContainer","_s","profileId","userDesc","setUserDesc","getUserDescription","fetch","then","response","ok","Error","json","data","catch","error","console","id","children","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cn/Documents/School/SYSC 4907 A/GitHub/personalportfolio/src/pages/portfolio/ProfileImgContainer.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// import { Button } from 'react-bootstrap';\n\nconst ProfileImgContainer = () => {\n    var profileId = 1;\n    const [userDesc, setUserDesc] = useState([]);\n\n    const getUserDescription = () => {\n        fetch(`http://localhost:5555/myportfolio/${profileId}`)\n\t\t.then(response => {\n\t\t\tif (!response.ok) {\n\t\t\t  \tthrow new Error('Network response was not ok');\n\t\t\t}\n\t\t\treturn response.json();\n\t\t})\n        .then(data => {\n            setUserDesc(data);\n        })\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error fetching data: \", error);\n\t\t});\n    };\n\n    useEffect(() => {\n\t\tgetUserDescription();\n    }, []);\n\n    return (\n\t\t<div id=\"profileImgContainer\">\n            <img src={\"https://avatars.githubusercontent.com/u/1\"} id=\"profileImg\" alt=\"Profile Image\" className='rounded-circle' /> \n\n            <div id=\"userBio\">\n                <p id=\"username\">{userDesc[\"firstname\"] + \" \" + userDesc[\"lastname\"]}</p>\n                <p id=\"userOccupation\">{profileId + \" \" + userDesc[\"occupation\"]}</p>\n            </div>\n        </div>\n\n\t\t// <div>\n\t\t// \t<h1>Data from PostgreSQL Database for Profile: {profileId}</h1>\n\n\t\t// \t{/* <ul>\n\t\t// \t\t{userDesc.map(item => (\n\t\t// \t\t\t<li key={item.id}>{item.value}</li>\n\t\t// \t\t))}\n\t\t// \t</ul> */}\n\n\t\t// \t<Button onClick={test()}>Click Me</Button>\n\t\t// </div>\n    );\n}\n\nexport default ProfileImgContainer;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,IAAIC,SAAS,GAAG,CAAC;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC7BC,KAAK,CAAE,qCAAoCJ,SAAU,EAAC,CAAC,CAC5DK,IAAI,CAACC,QAAQ,IAAI;MACjB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MACjD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CACKJ,IAAI,CAACK,IAAI,IAAI;MACVR,WAAW,CAACQ,IAAI,CAAC;IACrB,CAAC,CAAC,CACPC,KAAK,CAACC,KAAK,IAAI;MACfC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACA,CAAC;EAEDlB,SAAS,CAAC,MAAM;IAClBS,kBAAkB,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACFN,OAAA;IAAKiB,EAAE,EAAC,qBAAqB;IAAAC,QAAA,gBACnBlB,OAAA;MAAKmB,GAAG,EAAE,2CAA4C;MAACF,EAAE,EAAC,YAAY;MAACG,GAAG,EAAC,eAAe;MAACC,SAAS,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExHzB,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAAAC,QAAA,gBACblB,OAAA;QAAGiB,EAAE,EAAC,UAAU;QAAAC,QAAA,EAAEd,QAAQ,CAAC,WAAW,CAAC,GAAG,GAAG,GAAGA,QAAQ,CAAC,UAAU;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzEzB,OAAA;QAAGiB,EAAE,EAAC,gBAAgB;QAAAC,QAAA,EAAEf,SAAS,GAAG,GAAG,GAAGC,QAAQ,CAAC,YAAY;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL;;EAEX;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EAAA;AAEF,CAAC;AAAAvB,EAAA,CA9CKD,mBAAmB;AAAAyB,EAAA,GAAnBzB,mBAAmB;AAgDzB,eAAeA,mBAAmB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}