{"ast":null,"code":"var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse(val) {\n  return String(val);\n}\n;\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser(oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n}\n;\nfunction setTypeParser(oid, format, parseFn) {\n  if (typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n}\n;\ntextParsers.init(function (oid, converter) {\n  typeParsers.text[oid] = converter;\n});\nbinaryParsers.init(function (oid, converter) {\n  typeParsers.binary[oid] = converter;\n});","map":{"version":3,"names":["textParsers","require","binaryParsers","arrayParser","builtinTypes","exports","getTypeParser","setTypeParser","builtins","typeParsers","text","binary","noParse","val","String","oid","format","parseFn","init","converter"],"sources":["/Users/cn/Documents/School/SYSC 4907 A/GitHub/personalportfolio/node_modules/pg-types/index.js"],"sourcesContent":["var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC9C,IAAIC,aAAa,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAClD,IAAIE,WAAW,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAC9C,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAE5CI,OAAO,CAACC,aAAa,GAAGA,aAAa;AACrCD,OAAO,CAACE,aAAa,GAAGA,aAAa;AACrCF,OAAO,CAACF,WAAW,GAAGA,WAAW;AACjCE,OAAO,CAACG,QAAQ,GAAGJ,YAAY;AAE/B,IAAIK,WAAW,GAAG;EAChBC,IAAI,EAAE,CAAC,CAAC;EACRC,MAAM,EAAE,CAAC;AACX,CAAC;;AAED;AACA,SAASC,OAAOA,CAAEC,GAAG,EAAE;EACrB,OAAOC,MAAM,CAACD,GAAG,CAAC;AACpB;AAAC;;AAED;AACA;AACA;AACA;AACA,SAASP,aAAaA,CAAES,GAAG,EAAEC,MAAM,EAAE;EACnCA,MAAM,GAAGA,MAAM,IAAI,MAAM;EACzB,IAAI,CAACP,WAAW,CAACO,MAAM,CAAC,EAAE;IACxB,OAAOJ,OAAO;EAChB;EACA,OAAOH,WAAW,CAACO,MAAM,CAAC,CAACD,GAAG,CAAC,IAAIH,OAAO;AAC5C;AAAC;AAED,SAASL,aAAaA,CAAEQ,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAC5C,IAAG,OAAOD,MAAM,IAAI,UAAU,EAAE;IAC9BC,OAAO,GAAGD,MAAM;IAChBA,MAAM,GAAG,MAAM;EACjB;EACAP,WAAW,CAACO,MAAM,CAAC,CAACD,GAAG,CAAC,GAAGE,OAAO;AACpC;AAAC;AAEDjB,WAAW,CAACkB,IAAI,CAAC,UAASH,GAAG,EAAEI,SAAS,EAAE;EACxCV,WAAW,CAACC,IAAI,CAACK,GAAG,CAAC,GAAGI,SAAS;AACnC,CAAC,CAAC;AAEFjB,aAAa,CAACgB,IAAI,CAAC,UAASH,GAAG,EAAEI,SAAS,EAAE;EAC1CV,WAAW,CAACE,MAAM,CAACI,GAAG,CAAC,GAAGI,SAAS;AACrC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}